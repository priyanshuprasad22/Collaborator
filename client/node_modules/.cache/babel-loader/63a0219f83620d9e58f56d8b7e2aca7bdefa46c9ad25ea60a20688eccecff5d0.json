{"ast":null,"code":"'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nA processing instruction within an XML document.\n\n@public\n*/\nclass XmlProcessingInstruction extends XmlNode {\n  /**\n  @param {string} name\n  @param {string} [content]\n  */\n  constructor(name) {\n    let content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super();\n\n    /**\n    Name of this processing instruction. Also sometimes referred to as the\n    processing instruction \"target\".\n     @type {string}\n    @public\n    */\n    this.name = name;\n\n    /**\n    Content of this processing instruction.\n     @type {string}\n    @public\n    */\n    this.content = content;\n  }\n  get type() {\n    return XmlNode.TYPE_PROCESSING_INSTRUCTION;\n  }\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      name: this.name,\n      content: this.content\n    });\n  }\n}\nmodule.exports = XmlProcessingInstruction;","map":{"version":3,"names":["XmlNode","require","XmlProcessingInstruction","constructor","name","content","arguments","length","undefined","type","TYPE_PROCESSING_INSTRUCTION","toJSON","Object","assign","prototype","call","module","exports"],"sources":["C:/Project-1/Collborator/client/node_modules/@rgrove/parse-xml/src/lib/XmlProcessingInstruction.js"],"sourcesContent":["'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nA processing instruction within an XML document.\n\n@public\n*/\nclass XmlProcessingInstruction extends XmlNode {\n  /**\n  @param {string} name\n  @param {string} [content]\n  */\n  constructor(name, content = '') {\n    super();\n\n    /**\n    Name of this processing instruction. Also sometimes referred to as the\n    processing instruction \"target\".\n\n    @type {string}\n    @public\n    */\n    this.name = name;\n\n    /**\n    Content of this processing instruction.\n\n    @type {string}\n    @public\n    */\n    this.content = content;\n  }\n\n  get type() {\n    return XmlNode.TYPE_PROCESSING_INSTRUCTION;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      name: this.name,\n      content: this.content\n    });\n  }\n}\n\nmodule.exports = XmlProcessingInstruction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA,MAAMC,wBAAwB,SAASF,OAAO,CAAC;EAC7C;AACF;AACA;AACA;EACEG,WAAWA,CAACC,IAAI,EAAgB;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAC5B,KAAK,CAAC,CAAC;;IAEP;AACJ;AACA;AACA;AACA;AACA;IAEI,IAAI,CAACF,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;AACA;AACA;IAEI,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEA,IAAII,IAAIA,CAAA,EAAG;IACT,OAAOT,OAAO,CAACU,2BAA2B;EAC5C;EAEAC,MAAMA,CAAA,EAAG;IACP,OAAOC,MAAM,CAACC,MAAM,CAACb,OAAO,CAACc,SAAS,CAACH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE;MACxDX,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC,CAAC;EACJ;AACF;AAEAW,MAAM,CAACC,OAAO,GAAGf,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}