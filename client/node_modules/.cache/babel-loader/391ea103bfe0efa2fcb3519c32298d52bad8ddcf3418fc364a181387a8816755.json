{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project-1\\\\Collborator\\\\client\\\\src\\\\component\\\\UserList.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = ListContainer;\nconst UserItem = _ref2 => {\n  _s();\n  let {\n    user,\n    setSelectedUsers\n  } = _ref2;\n  const [selected, setSelected] = useState(false);\n  const handleSelect = () => {\n    if (selected) {\n      setSelectedUsers(prevUsers => prevUsers.filter(prevUser => prevUser !== user.id));\n    } else {\n      setSelectedUsers(prevUsers => [...prevUsers, user.id]);\n    }\n    setSelected(prevSelected => !prevSelected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    onClick: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.image,\n        name: user.fullName || user.id,\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-item__name\",\n        children: user.fullName || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), selected ? /*#__PURE__*/_jsxDEV(InviteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__invite-empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(UserItem, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n_c2 = UserItem;\nconst UserList = _ref3 => {\n  _s2();\n  let {\n    setSelectedUsers\n  } = _ref3;\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n    if (client) getUsers();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list__message\",\n        children: \"Error loading, please refresh and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n  if (listEmpty) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list__message\",\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__message\",\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user,\n      setSelectedUsers: setSelectedUsers\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s2(UserList, \"12oMBGjHHTXxcU7An+bzo8oyRxc=\", false, function () {\n  return [useChatContext];\n});\n_c3 = UserList;\nexport default UserList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","useChatContext","InviteIcon","jsxDEV","_jsxDEV","ListContainer","_ref","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserItem","_ref2","_s","user","setSelectedUsers","selected","setSelected","handleSelect","prevUsers","filter","prevUser","id","prevSelected","onClick","image","name","fullName","size","_c2","UserList","_ref3","_s2","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","error","setError","getUsers","response","queryUsers","$ne","userID","limit","length","map","i","index","_c3","$RefreshReg$"],"sources":["C:/Project-1/Collborator/client/src/component/UserList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nimport { InviteIcon } from '../assets';\r\n\r\nconst ListContainer = ({ children }) => {\r\n    return (\r\n        <div className=\"user-list__container\">\r\n            <div className=\"user-list__header\">\r\n                <p>User</p>\r\n                <p>Invite</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const handleSelect = () => {\r\n        if(selected) {\r\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\r\n        } else {\r\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id])\r\n        }\r\n\r\n        setSelected((prevSelected) => !prevSelected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\r\n            <div className=\"user-item__name-wrapper\">\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\r\n            </div>\r\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n    const { client } = useChatContext();\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listEmpty, setListEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(loading) return;\r\n\r\n            setLoading(true);\r\n            \r\n            try {\r\n                const response = await client.queryUsers(\r\n                    { id: { $ne: client.userID } },\r\n                    { id: 1 },\r\n                    { limit: 8 } \r\n                );\r\n\r\n                if(response.users.length) {\r\n                    setUsers(response.users);\r\n                } else {\r\n                    setListEmpty(true);\r\n                }\r\n            } catch (error) {\r\n               setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        if(client) getUsers()\r\n    }, []);\r\n\r\n    if(error) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    Error loading, please refresh and try again.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    if(listEmpty) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    No users found.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ListContainer>\r\n            {loading ? <div className=\"user-list__message\">\r\n                Loading users...\r\n            </div> : (\r\n                users?.map((user, i) => (\r\n                  <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers} />  \r\n                ))\r\n            )}\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nexport default UserList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}